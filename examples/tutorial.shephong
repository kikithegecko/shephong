{ ****************************
  **** T U T O R I A L S *****
  ****************************
  ** These are all examples **
  ** found at the "tutorial" *
  ******** wiki page. ********
  ****************************
}

{ S Y N T A X : C R P N }

(2 3 -)


{ S Y N T A X : L I S T S }

(7 4 9 ~)


{ S Y N T A X : 
  D E F I N I T I O N S }

((~) $ =)
  
((1 $1 +) inc :)


{ S Y N T A X : C A L L S }

(0 5 inc)
(8 5 inc)

{ (5 inc) -> error! need lists }
((5 ~) inc) {better...}


{ S Y N T A X : M A G I C }

(((5 ~) inc) `)


{ C O N T R O L  
  S T R U C T U R E S }
  
{ ((1 ($ inc) +) inc :) { infinite loop } }

(((1 $1 -) (1 $1 +) (5 $1 <)) foo :)


{ ****************************
  **** B U I L T - I N S *****
  ****************************
}

{ L I S T O P S }

((2 6 3 ~) #^)               { -> 3 }
((5 2 (3 5 ~) ~) #^)         { -> (3 5 ~) }

((2 6 3 ~) #_)               { -> (2 6 ~) }
((5 2 (3 5 ~) ~) #_)         { -> (5 2 ~) }
((1 (2 3 ~) 5 ~) #_)         { -> (1 (2 3 ~)) }

((3 2 ~) (1 ~) #@)           { -> (3 2 1 ~) }
((4 7 ~) (3 5 ~) #@)         { -> (4 7 3 5 ~) }
((6 5 4 ~) ((3 2 1 ~) ~) #@) { -> (6 5 4 (3 2 1~) ~) }

("no" "yes" ((2 3 4 ~) #?))  { -> "yes" }


{ A R I T H M E T I C S }

(1 2 #+)              { -> 3 }
(1 2 3 4 #+)          { -> 10 }

(1 2 #-)              { -> 1 }
(2 1 #-)              { -> -1 }
(4 #-)                { -> -4 }

(2 3 #*)              { -> 6 }
(1 2 2 3 4 #*)        { -> 48 }

(3 6 #/)              { -> 2 }
(4 6 #/)              { -> 1 }
(2 3 4 100 #/)        { -> 4 }

(3 6 #%)              { -> 0 }
(4 6 #%)              { -> 2 }
(2 (3 -) #%)          { -> -1 }
((2 -) 3 #%)          { -> 1 }


{ C O M P A R I S O N }

(4 b :)

("nein" "ja" (4 b =))                           { -> "ja" }
("nein" "ja" ('b 'a =))                         { -> "nein" }
("nein" "ja" ((4 4 3 ~) (4 4 3 ~) (4 4 3 ~) =)) { -> "ja" }

("nein" "ja" (3 4 <))                           { -> "ja" }
("nein" "ja" ('c 'a <))                         { -> "nein" }
("nein" "ja" (1 2 3 <))                         { -> "ja" }


{ L O G I C S }

("nein" "ja" ((2 3 >) (7 4 <) #&))           { -> "ja" }
("nein" "ja" (('a 'f >) (3 3 <) (1 2 <) #&)) { -> "nein" }

("nein" "ja" ((2 3 >) (7 4 >) #|))           { -> "ja" }
("nein" "ja" (('a 'f =) (3 3 <) (1 2 <) #|)) { -> "nein" }

("nein" "ja" ((3 3 <) #!))                   { -> "ja" }
("nein" "ja" (((2 3 >) (7 4 <) #&) #!))      { -> "nein" }


{ M A G I C S }




{ S T A T I C S }

(4 vier :)
((vier) `)					{ -> 5 }
([vier] `)                  { -> 4 }
[(vier) `]					{ -> 4 }
(5 vier :)
